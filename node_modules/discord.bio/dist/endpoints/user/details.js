"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const User_1 = __importDefault(require("../../structures/User"));
const discord_js_1 = require("discord.js");
const util_1 = require("util");
async function details(slugOrID) {
    const profile = await this.bio.api('/user/details/' + slugOrID, 'GET');
    const { details } = profile.payload.user;
    details.verified = Boolean(details.verified);
    details.premium = Boolean(details.premium);
    switch (details.gender) {
        case 0:
            details.gender = 'male';
            break;
        case 1:
            details.gender = 'female';
            break;
        case 2:
            details.gender = "non-binary";
            break;
        case null: break;
    }
    details.createdAt = new Date(details.created_at);
    Object.defineProperty(details, 'createdTimestamp', {
        get: function () { return details.createdAt.getTime.bind(details.createdAt)(); },
        set: function (timestamp) {
            details.createdAt = new Date(timestamp);
        }
    });
    Object.defineProperty(details, 'created_at', {
        get: util_1.deprecate(function () { return details.createdAt.toISOString(); }, 'Please use .createdAt.toISOString() instead.'),
        set: function (v) { details.createdAt = new Date(v); }
    });
    details.birthday = details.birthday ? new Date(details.birthday) : null;
    details.flags = new discord_js_1.UserFlags(details.flags);
    details.staff = Boolean(details.staff);
    //append userful properties
    profile.payload.discord = new User_1.default(profile.payload.discord);
    return profile.payload;
}
module.exports = details;
//# sourceMappingURL=details.js.map